# -- Container registry (When running on a local Kubernetes cluster using local image, make this empty)
containerRegistry: "wso2"

wso2:
  subscription:
    # -- WSO2 subscription username
    username: ""
    # -- WSO2 subscription password
    password: ""
  ingress:
    # -- Enable Ingress for MI
    enabled: true
    # -- Ingress class name
    ingressClassName: "nginx"
    # -- (list) Ingress annotations
    annotations:
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    # -- K8s TLS secret for configured hostname
    tlsSecret: ""
    ratelimit:
      # -- Ingress rate limit
      enabled: false
      # -- Ingress ratelimit zone name
      zoneName: ""
      # -- Ingress ratelimit burst limit
      burstLimit: ""
      # -- Enable Ingress for metrics
    metrics:
      annotations:
        nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    # Configure management ingress
    management:
      # Hostname for the Micro Integrator management endpoint.
      hostname: "mi.wso2.com"
      # Annotations for the Micro Integrator management Ingress.
      annotations:
        kubernetes.io/ingress.class: "nginx"
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
  config:
    # -- Port offset for Micro Integrator (https://apim.docs.wso2.com/en/latest/install-and-setup/setup/deployment-best-practices/changing-the-default-ports-with-offset/#changing-the-default-mi-ports)
    portOffset: 10
    admin:
      # -- Super admin username
      username: ""
      # -- Super admin password
      password: ""
      # -- Create super admin account
      createAdminAccount: false
    userstore:
      file:
        # -- Enable/Disable file based userstore
        enabled: true
    secureVault:
      # -- Enable/Disable secure vault
      enabled: false
    keyStore:
      primary:
        # -- Primary keystore file name
        fileName: "wso2carbon.jks"
        # -- Primary keystore alias
        alias: "wso2carbon"
        # -- Primary keystore password
        password: "wso2carbon"
        # -- Primary keystore key password
        keyPassword: "wso2carbon"
      internal:
        # -- Internal keystore file name
        fileName: "wso2carbon.jks"
        # -- Internal keystore alias
        alias: "wso2carbon"
        # -- Internal keystore password
        password: "wso2carbon"
        # -- Internal keystore key password
        keyPassword: "wso2carbon"
    trustStore:
      primary:
        # -- Primary truststore file name
        fileName: "client-truststore.jks"
        # -- Primary truststore password
        password: "wso2carbon"
    dashboard:
      # -- MI Dashboard URL
      url: "https://icp.wso2.com/dashboard/api"
      # -- The time interval (in seconds) between two heartbeats sent from the Micro Integrator to the dashboard server
      heartbeatInterval: 5
      # -- The group ID of the Micro Integrator deployment
      # @default -- release name
      groupId: "mi_dev"
      # -- The node ID of the Micro Integrator deployment
      # @default -- pod name
      nodeId: "dev_node_2"
      # -- The service name of the Micro Integrator
      managementHostname: "<MI_SERVICE_NAME>>"
      # -- The management port of the Micro Integrator
      managementPort: 9164
  deployment:
    securityContext:
      # -- Enable/Disable AppArmor (https://kubernetes.io/docs/tutorials/security/apparmor/)
      apparmor: false
      # -- Enable/Disable seccomp profile (https://kubernetes.io/docs/tutorials/security/seccomp/)
      seccompProfile: false
      # -- The UID to run the entrypoint of the container process
      runAsUser: "802"
    # -- Hostname of the Micro Integrator deployment
    hostname: "mi.wso2.com"
    # -- Build version of the Micro Integrator
    BuildVersion: "4.3.0"
    # -- K8s secret name which contains JKS files
    JKSSecretName: ""
    # -- imagePullSecrets for private docker registry
    imagePullSecrets: ""
    image:
      # -- Container image repository name
      repository: "wso2mi"
      # -- Container image digest
      digest: ""
      # -- Container image tag
      tag: "4.3.0"
      # -- Container image pull policy. Refer (https://kubernetes.io/docs/concepts/containers/images/#updating-images)
      pullPolicy: IfNotPresent

    # -- Kubernetes Probes (https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)
    probes:
      # -- Startup probe executed prior to Liveness Probe taking over
      startup:
        # -- Number of seconds after the container has started before startup probes are initiated
        initialDelaySeconds: 5
        # -- How often (in seconds) to perform the probe
        periodSeconds: 3
        # -- Number of attempts
        failureThreshold: 40
      # -- Indicates whether the container is running
      liveness:
        # -- How often (in seconds) to perform the probe
        periodSeconds: 10
        # -- Indicates whether the container is ready to service requests
      readiness:
        # -- Number of seconds after the container has started before readiness probes are initiated
        initialDelaySeconds: 60
        # -- How often (in seconds) to perform the probe
        periodSeconds: 1

    # -- Number of deployment replicas
    replicas: 1
    # -- Horizontal Pod Autoscaler (HPA) configurations (https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
    hpa:
      # -- Enable/Disable Horizontal Pod Autoscaler (HPA)
      enabled: false
      # -- Min replica count for HPA
      minReplicas: 1
      # -- Max replica count for HPA
      maxReplicas: 2
      # -- Average CPU utilization percentage for HPA
      cpuUtilizationPercentage: 75
      # -- Average memory utilization percentage for HPA
      memoryUtilizationPercentage: 75
    # -- Pod disruption budget configurations (https://kubernetes.io/docs/tasks/run-application/configure-pdb/)
    pdb:
      # -- Enable/Disable pod disruption budget
      enabled: false
      # -- Min available pods for pod disruption budget
      minAvailable: 1

    strategy:
      rollingUpdate:
        # -- The maximum number of pods that can be scheduled above the desired number of pods.
        maxSurge: 1
        # -- The maximum number of pods that can be unavailable during the update.
        maxUnavailable: 0

    # These are the minimum resource recommendations for running WSO2 Micro Integrator
    resources:
      requests:
        # -- The minimum amount of memory that should be allocated for a Pod
        memory: "512Mi"
        # -- The minimum amount of CPU that should be allocated for a Pod
        cpu: "500m"
      limits:
        # -- The maximum amount of memory that should be allocated for a Pod
        memory: "1Gi"
        # -- The maximum amount of CPU that should be allocated for a Pod
        cpu: "1000m"

      # JVM settings
      # These are the resource allocation configurations associated with the JVM
      jvm:
        memory:
          # -- The minimum amount of memory that should be allocated for the JVM
          xms: "512m"
          # -- The maximum amount of memory that should be allocated for the JVM
          xmx: "1024m"

    # -- (list) Environment variables for the Micro integrator deployment
    envs:
    # wso2_oh_sample_baseUrl: "http://localhost:8290/services/odata"

    # Configure synapse testing
    synapseTest:
      # -- Enable/Disable synapse testing
      enabled: false
